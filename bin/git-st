#!/bin/bash

if [[ ${OS} = *indows* ]]
then
    IS_WINDOWS='true'
    FILE_EXT='.exe'
    PS=';'
    SCRIPT_PATH="${0//\\//}"
else
    PS=':'
    FILE_EXT=''
    SCRIPT_PATH="${0}"
fi

: ${DIR:="$(dirname "${SCRIPT_PATH}")"}
JAR_NAME='git-st.jar'
PKG_NAME='com.googlecode.gitst'

if [ -z "${STARTEAM_JAVA_API}" ]
then
    echo 'System environment variable STARTEAM_JAVA_API is not set.' >&2
    echo 'Please set this variable first.' >&2
    echo 'Example:' >&2
    
    if [ -z "${IS_WINDOWS}" ]
    then
        echo 'export STARTEAM_JAVA_API="/opt/StarTeamCP_2009/lib/starteam110.jar"' >&2
    else
        echo 'export STARTEAM_JAVA_API="c:/Program Files/Borland/StarTeam SDK 11.0/Lib/starteam110.jar"' >&2
    fi
    exit 1
fi

if [ -f "${DIR}/${JAR_NAME}" ]
then
    JAR_PATH="${DIR}/${JAR_NAME}"
elif [ -f "${DIR}/../lib/${JAR_NAME}" ]
then
    JAR_PATH="${DIR}/../lib/${JAR_NAME}"
else
    echo "${JAR_NAME} not found" >&2
    exit 1
fi

CLASSPATH="${JAR_PATH}${PS}${STARTEAM_JAVA_API}"

if [ "${OSTYPE}" = 'cygwin' ]
then 
    ORIG_IFS="${IFS}"
    IFS="${PS}"
    for i in ${CLASSPATH}
    do 
        i=$(cygpath -m "${i}")
        d=$(dirname "${i}")
        LIBRARY_PATH="${LIBRARY_PATH}${PS}${d}"
        tmpCP="${tmpCP}${PS}${i}"
    done
    IFS="${ORIG_IFS}"
    CLASSPATH="${tmpCP}"
else
    ORIG_IFS="${IFS}"
    IFS="${PS}"
    for i in ${CLASSPATH}
    do
        LIBRARY_PATH="${LIBRARY_PATH}${PS}$(dirname "${i}")"
    done
    IFS="${ORIG_IFS}"
fi

if [ -z "${CLASS_NAME}" ]
then
    case ${1} in
        init)
            CLASS_NAME='Init'
            ;;
        pull)
            CLASS_NAME='Pull'
            ;;
        push)
            CLASS_NAME='Push'
            ;;
        status)
            CLASS_NAME='Status'
            ;;
        *)
            echo 'Usage: git st <init|pull|push|status> [-J<JavaArg>]*' >&2
            exit 1
            ;;
    esac
    shift
fi

declare -a ARGS
declare -a JVM_ARGS

for i in "$@" "${GITST_OPTS}"
do
    if [[ $i = -J* ]]
    then
        JVM_ARGS[${#JVM_ARGS[@]}]="${i:2}"
        [[ "${i}" = -J-Xmx* ]] && SKIP_MX_ARG="true"
    else
        ARGS[${#ARGS[@]}]="${i}"
    fi
done

[ -z "${SKIP_MX_ARG}" ] && JVM_ARGS[${#JVM_ARGS[@]}]="-Xmx1g"

if [ ! -z "${JAVA7_HOME}" ] && [ -f "${JAVA7_HOME}/bin/java${FILE_EXT}" ]
then
    JAVA="${JAVA7_HOME}/bin/java${FILE_EXT}"
elif [ ! -z "${JAVA_HOME}" ] && [ -f "${JAVA_HOME}/bin/java${FILE_EXT}" ]
then
    JAVA="$JAVA_HOME/bin/java${FILE_EXT}"
else
    JAVA="java"
fi

exec "$JAVA" -cp "${CLASSPATH}" "-Djava.library.path=${LIBRARY_PATH}" "${JVM_ARGS[@]}" "${PKG_NAME}.${CLASS_NAME}" "${ARGS[@]}"
